model User {
  id            Int         @id @default(autoincrement())
  name          String
  email         String      @unique
  password      String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  city          City?       @relation(fields: [cityId], references: [id])
  cityId        Int?
  state         State?      @relation(fields: [stateId], references: [id])
  stateId       Int?
  country       Country?    @relation(fields: [countryId], references: [id])
  countryId     Int?
}

model Country {
  id            Int         @id @default(autoincrement())
  name          String      
  isActive      Boolean     @default(true)
  isDeleted     Boolean     @default(false)
  updatedBy     User?       @relation(fields: [updatedById], references: [id])
  updatedById   Int?
  createdBy     User?       @relation(fields: [createdById], references: [id])
  createdById   Int?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  sortingSeq    Int?
  syncId        String?
}

model State {
  id            Int         @id @default(autoincrement())
  country       Country?    @relation(fields: [countryId], references: [id])
  countryId     Int?
  name          String      
  isActive      Boolean     @default(true)
  isDeleted     Boolean     @default(false)
  updatedBy     User?       @relation(fields: [updatedById], references: [id])
  updatedById   Int?
  createdBy     User?       @relation(fields: [createdById], references: [id])
  createdById   Int?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  sortingSeq    Int?
  syncId        String?
}

model City {
  id            Int         @id @default(autoincrement())
  state         State?      @relation(fields: [stateId], references: [id])
  stateId       Int?
  country       Country?    @relation(fields: [countryId], references: [id])
  countryId     Int?
  name          String      
  isActive      Boolean     @default(true)
  isDeleted     Boolean     @default(false)
  updatedBy     User?       @relation(fields: [updatedById], references: [id])
  updatedById   Int?
  createdBy     User?       @relation(fields: [createdById], references: [id])
  createdById   Int?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  sortingSeq    Int?
  syncId        String?
}
